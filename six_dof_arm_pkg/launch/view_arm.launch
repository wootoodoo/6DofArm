<launch>
	<arg name="model" />
	<!-- Parsing xacro and setting robot_description parameter -->

	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find six_dof_arm_pkg)/config/six_dof_arm.xacro" />

	<!-- Starting Joint state publisher node which will publish the joint values -->
	<node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />

	<!-- Starting robot state publish which will publish tf -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

	<!-- Launch visualization in rviz -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find mastering_ros_robot_description_pkg)/urdf.rviz" required="true" />

	<!-- To launch Gazebo -->
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- We resume the logic in empty_world.launch -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
	<arg name="debug" value="$(arg debug)" />
	<arg name="gui" value="$(arg gui)" />
	<arg name="paused" value="$(arg paused)"/>
	<arg name="use_sim_time" value="$(arg use_sim_time)"/>
	<arg name="headless" value="$(arg headless)"/>
	</include>
	
	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
	respawn="false" output="screen"
	args="-urdf -model six_dof_arm -param robot_description"/>

</launch>

<!-- args="-d $(find mastering_ros_robot_description_pkg)/urdf.rviz" -->
